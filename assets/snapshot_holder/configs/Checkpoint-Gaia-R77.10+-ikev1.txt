! Amazon Web Services
! Virtual Private Cloud

! AWS uses unique identifiers to manipulate the configuration of
! a VPN connection. Each VPN connection is assigned an identifier and is
! associated with two other identifiers, namely the
! customer gateway identifier and virtual private gateway identifier.
!
! Your VPN Connection ID          : vpn-123456789abc12345
! Your Virtual Private Gateway ID  : vgw-00112233aabbcc112
! Your Customer Gateway ID        : cgw-abcabcabc12312312
!
! This configuration consists of two tunnels. Both tunnels must be
! configured on your customer gateway.
!
! --------------------------------------------------------------------------------
! IPSec Tunnel #1
! --------------------------------------------------------------------------------
! #1: Tunnel Interface Configuration
! A tunnel interface is configured to be the logical interface associated
! with the tunnel. All traffic routed to the tunnel interface will be
! encrypted and transmitted to the VPC. Similarly, traffic from the VPC
! will be logically received on this interface.
!
! The address of the interface is configured with the setup for your
! customer gateway.  If the address changes, the customer gateway and VPN
! connection must be recreated with Amazon VPC.
!
! A tunnel interface must be created to route the packets via the tunnel.
!
 a. Open the Gaia platform portal of your gateway.
 b. Choose "Network Interfaces" and create a new VPN tunnel interface.
 c. For "VPN Tunnel ID", enter 1
 d. Peer Name: aws_Tunnel1
 e. For "VPN Tunnel Type", choose Numbered.
 f. IP Address: 169.254.225.142
 g. Remote IP: 169.254.225.141
 h. Connect to your security gateway over SSH. If you're using the non-default shell, change to clish by running the following command: clish
 i. Run the following command:
    set interface vpnt1  mtu 1500
    save config

! --------------------------------------------------------------------------------
! #2: Border Gateway Protocol (BGP) Configuration
!
! BGP is used within the tunnel to exchange prefixes between the
! Virtual Private Gateway and your Customer Gateway. The Virtual Private Gateway
! will announce the prefix corresponding to your VPC.
!
! The local BGP Autonomous System Number (ASN) (65000)
! is configured as part of your Customer Gateway. If the ASN must
! be changed, the Customer Gateway and VPN Connection will need to be recreated with AWS.
!

Connect to your security gateway over SSH. If you're using the non-default shell, change to clish by running the following command: clish

a. Enter the following commands

set as  65000
set bgp external remote-as 64512 on
set bgp external remote-as 64512 peer 169.254.225.141 on
set bgp external remote-as 64512 peer 169.254.225.141 holdtime 30
set bgp external remote-as 64512 peer 169.254.225.141 keepalive 10
save config

b. Allow the import of routes advertised by AWS:
 1. In the Gaia WebUI, go to "Advanced Routing", "Inbound Route Filters" and choose "Add", "Add BGP Policy (Based on AS)".
 2. Under "Add BGP Policy", select a value between 512 and 1024 and enter 64512 as the AS Number.
    Note: If running in a cluster, repeat these steps for the other members.
 3. Choose "Save".

Refer to the Gaia Advanced Routing Administration Guide for other alternatives, such as routemaps.

c. Advertise local routes

Note: you can redistribute routes from different sources such as static routes, routes obtained through dynamic routing protocols, or just local interface information.
The following steps will demonstrate how to distribute local interface routes. For more information, refer to the Gaia Advanced Routing Administration Guide.

 1. Open the Gaia WebUI.
 2. In "Advanced Routing", "Route Redistribution", choose "Add Redistribution From", and select "Interface".
 3. Under "To Protocol", select BGP AS 64512.
 4. Under "Interface", select one of the internal interfaces - this will advertise a route to the subnet connected to that interface.
 5. Choose "Save".

! --------------------------------------------------------------------------------
! #3: Define Network Objects

 1. Open the SmartDashboard, and create a new interoperable device.
 2. For "Name", enter the name for the first VPN tunnel interface aws_Tunnel1.
 3. For "IPv4 Address", IP address: <AWS_ENDPOINT_1>
 4. Click on the Topology Tab and select Manually defined in the VPN Domain section.
 5. Under Manually defined, create a empty simple grpup by clicking the drop-down menu to choose New -> Group -> Simple group.
 6. Click OK
 7. On your Checkpoint VPN Gateway, fetch the VPN tunnel interface. Ensure that you've enabled the IPsec VPN blade on your gateway.
   a. Open your gateway or cluster object, and choose "Topology".
   b. Choose "Get Topology".
   c. In the "VPN Domain" section, choose "Manually defined". Browse to the same simple group that you created above and select it.

Note: You can keep any existing VPN domain that you've configured; however, ensure that the hosts and networks that are used or served by the new VPN connection are not declared in that VPN domain, especially if the VPN domain is automatically derived ("Based on Topology information"). If you're using clusters, then edit the topology and define the interfaces as cluster interfaces. Use the IP addresses provided in this file.




! #4: Internet Key Exchange (IKE) Configuration and IPSEC Config
!
! A policy is established for the supported ISAKMP encryption,
! authentication, Diffie-Hellman, lifetime, and key parameters.
! Please note, these sample configurations are for the minimum requirement of AES128, SHA1, and DH Group 2.
! You will need to modify these sample configuration files to take advantage of AES256, SHA256, or other DH groups like 2, 14-18, 22, 23, and 24.
! NOTE: If you customized tunnel options when creating or modifying your VPN connection, you may need to modify these sample configurations to match the custom settings for your tunnels.

! IPSec Configuration
! The IPSec transform set defines the encryption, authentication, and IPSec mode parameters.

! The address of the external interface for your customer gateway must be a static address.
! Your customer gateway may reside behind a device performing network address translation (NAT).
! To ensure that NAT traversal (NAT-T) can function, you must adjust your firewall rules to unblock UDP port 4500.
| If not behind NAT, and you are not using an Accelerated VPN, we recommend disabling NAT-T. If you are using an Accelerated VPN, make sure that NAT-T is enabled.

! Configuration to be done via Smart Dashboard.
! Please make sure you have enabled the VPN Blade on the Firewall.

 1. Under Security Policies choose "VPN Communities" and click "New", "Star Community".
 2. Choose "General" and provide a name :  vpn-123456789abc12345.
 3. For "Center Gateways", add your gateway or cluster.
 4. For "Satellite Gateways", add the interoperable devices that you created before.
 5. For "Encryption", choose "IKEv1 only".
 6. In the "Encryption Suite" section, choose "Custom", "Custom Encryption".
 7. Configure the properties as follows:
   Phase 1 Properties - Internet Key Exchange (IKE)
   a. Perform key exchange encryption with: aes128
   b. Perform data integrity with: sha1

   Phase 2 Properties -IPSEC
   a. Perform IPsec data encryption with: aes128
   b. Perform data integrity with: sha1

 8. For "Tunnel Management", choose "Set Permanent Tunnels", "On all tunnels in the community".
 9. In the "VPN Tunnel Sharing" section, choose "One VPN tunnel per Gateway pair".
 10. Expand "Advanced Settings". For "Shared Secret": <pre-shared-key>
 11. For "Advanced VPN Properties", configure the properties as follows:
   IKE (Phase 1)
   a. Use Diffie-Hellman group: 2
   b. IKE SA lifetime: 28800 seconds
   IPSEC (Phase 2)
   a. Use Perfect Forward Secrecy: Checked
   b. IPSEC SA Lifetime: 3600 sec

 12. Click OK to close the VPN Window.



! --------------------------------------------------------------------------------
#5: Firewall Configuration
!
! Create a firewall policy permitting traffic from your local subnet to the VPC subnet and vice versa
! This example policy permits all traffic from the local subnet to the VPC.You must create firewall rules when you specify a community inside a VPN column.
 1. From the SmartDashboard, choose "Global Properties", "VPN", "Advanced".
 2. Choose "Enable VPN Directional Match in VPN Column".
 3. From the SmartDashboard, choose "Firewall" and create firewall rules/policy as follows:
  a. Allow the VPC subnet to communicate with the local subnet using the required protocol.
  b. Allow the local subnet to communicate with the VPC subnet using the required protocol.
 4. In the VPN cell for the rule, open the context (right-click) menu and choose "Directional Match Condition".
 5. Choose "Add" to add directional match rules as follows:
   a. internal_clear --> vpn-123456789abc12345
   b. vpn-123456789abc12345 --> vpn-123456789abc12345
   c. vpn-123456789abc12345 --> internal_clear
 6. Install the policy on the gateway.
   Note: If you enable directional match rules globally, existing VPN rules are not affected and continue to function.
    Initiate some traffic from local network to the VPC to bring up the tunnel.

! --------------------------------------------------------------------------------



! #6:Dead Peer Detection (DPD)

Your Check Point gateway can use Dead Peer Detection (DPD) to identify when an IKE association is down.

To configure DPD for a permanent tunnel, the permanent tunnel must be configured in the AWS VPN community (refer to Step 4 in Step 4: Create a VPN Community and Configure IKE and IPsec).

By default, the tunnel_keepalive_method property for a VPN gateway is set to tunnel_test. You must change the value to dpd. Each VPN gateway in the VPN community that requires DPD monitoring must be configured with the tunnel_keepalive_method property, including any 3rd party VPN gateway (you cannot configure different monitoring mechanisms for the same gateway).

You can update the tunnel_keepalive_method property using the GuiDBedit tool.

To modify the tunnel_keepalive_method property

 1. Open the Check Point SmartDashboard, and choose Security Management Server, Domain Management Server.
 2. Choose File, Database Revision Control... and create a revision snapshot.
 3. Close all SmartConsole windows, such as the SmartDashboard, SmartView Tracker, SmartView Monitor, and so on.
 4. Start the GuiBDedit tool. For more information, see the Check Point Database Tool article on the Check Point Support Center.
 5. Choose Security Management Server, Domain Management Server.
 6. In the upper left pane, choose Table, Network Objects, network_objects.
 7. In the upper right pane, select the relevant Security Gateway, Cluster object.
 8. Press CTRL+F, or use the Search menu to search for the following: tunnel_keepalive_method.
 9. In the lower pane, open the context menu for tunnel_keepalive_method, and select Edit.... Choose dpd and choose OK.
 10. Repeat steps 7 - 9 for each gateway that's part of the AWS VPN Community.
 11. Save the changes by choosing File, Save All.
 12. Close the GuiDBedit tool.
 13. Open the Check Point SmartDashboard, and choose Security Management Server, Domain Management Server.
 14. Install the policy on the relevant Security Gateway, Cluster object.



Please refer to sk97746 for more information


! #7: Optional Parameters (Recommended) :
To enable MSS clamping go to your Checkpoint Management Server:

 1. Go to C:\Program Files (x86)\CheckPoint\SmartConsole\R77.10\PROGRAM.
 2. Open the Checkpoint Database Tool by running GuiDBedit.exe.
 3. Choose "Table", "Global Properties", "Properties".
 4. For "fw_clamp_tcp_mss", enter true.

Enabling TCP MSS Clamping (R77.20 and above): refer to sk101219 for more information.

Initiate some traffic from local network to the VPC to bring up the tunnel.
Additional Notes
================================================================================
- Amazon Virtual Private Cloud Network Administrator Guide: http://docs.aws.amazon.com/AmazonVPC/latest/NetworkAdminGuide/Welcome.html
- For more information on static VPN, see the following article on the Check Point Support Center: https://supportcenter.checkpoint.com sk100726
- For more information on BGP VPN, see the following article on the Check Point Support Center: https://supportcenter.checkpoint.com sk108958


! --------------------------------------------------------------------------------
! IPSec Tunnel #2
! --------------------------------------------------------------------------------
! #1: Tunnel Interface Configuration
! A tunnel interface is configured to be the logical interface associated
! with the tunnel. All traffic routed to the tunnel interface will be
! encrypted and transmitted to the VPC. Similarly, traffic from the VPC
! will be logically received on this interface.
!
! The address of the interface is configured with the setup for your
! customer gateway.  If the address changes, the customer gateway and VPN
! connection must be recreated with Amazon VPC.
!
! A tunnel interface must be created to route the packets via the tunnel.
!
 a. Open the Gaia platform portal of your gateway.
 b. Choose "Network Interfaces" and create a new VPN tunnel interface.
 c. For "VPN Tunnel ID", enter 2
 d. Peer Name: aws_Tunnel2
 e. For "VPN Tunnel Type", choose Numbered.
 f. IP Address: 169.254.121.206
 g. Remote IP: 169.254.121.205
 h. Connect to your security gateway over SSH. If you're using the non-default shell, change to clish by running the following command: clish
 i. Run the following command:
    set interface vpnt2  mtu 1500
    save config

! --------------------------------------------------------------------------------
! #2: Border Gateway Protocol (BGP) Configuration
!
! BGP is used within the tunnel to exchange prefixes between the
! Virtual Private Gateway and your Customer Gateway. The Virtual Private Gateway
! will announce the prefix corresponding to your VPC.
!
! The local BGP Autonomous System Number (ASN) (65000)
! is configured as part of your Customer Gateway. If the ASN must
! be changed, the Customer Gateway and VPN Connection will need to be recreated with AWS.
!

Connect to your security gateway over SSH. If you're using the non-default shell, change to clish by running the following command: clish

a. Enter the following commands

set as  65000
set bgp external remote-as 64512 on
set bgp external remote-as 64512 peer 169.254.121.205 on
set bgp external remote-as 64512 peer 169.254.121.205 holdtime 30
set bgp external remote-as 64512 peer 169.254.121.205 keepalive 10
save config

b. Allow the import of routes advertised by AWS:
 1. In the Gaia WebUI, go to "Advanced Routing", "Inbound Route Filters" and choose "Add", "Add BGP Policy (Based on AS)".
 2. Under "Add BGP Policy", select a value between 512 and 1024 and enter 64512 as the AS Number.
    Note: If running in a cluster, repeat these steps for the other members.
 3. Choose "Save".

Refer to the Gaia Advanced Routing Administration Guide for other alternatives, such as routemaps.

c. Advertise local routes

Note: you can redistribute routes from different sources such as static routes, routes obtained through dynamic routing protocols, or just local interface information.
The following steps will demonstrate how to distribute local interface routes. For more information, refer to the Gaia Advanced Routing Administration Guide.

 1. Open the Gaia WebUI.
 2. In "Advanced Routing", "Route Redistribution", choose "Add Redistribution From", and select "Interface".
 3. Under "To Protocol", select BGP AS 64512.
 4. Under "Interface", select one of the internal interfaces - this will advertise a route to the subnet connected to that interface.
 5. Choose "Save".

! --------------------------------------------------------------------------------
! #3: Define Network Objects

 1. Open the SmartDashboard, and create a new interoperable device.
 2. For "Name", enter the name for the first VPN tunnel interface aws_Tunnel2.
 3. For "IPv4 Address", IP address: <AWS_ENDPOINT_2>
 4. Click on the Topology Tab and select Manually defined in the VPN Domain section.
 5. Under Manually defined, create a empty simple grpup by clicking the drop-down menu to choose New -> Group -> Simple group.
 6. Click OK
 7. On your Checkpoint VPN Gateway, fetch the VPN tunnel interface. Ensure that you've enabled the IPsec VPN blade on your gateway.
   a. Open your gateway or cluster object, and choose "Topology".
   b. Choose "Get Topology".
   c. In the "VPN Domain" section, choose "Manually defined". Browse to the same simple group that you created above and select it.

Note: You can keep any existing VPN domain that you've configured; however, ensure that the hosts and networks that are used or served by the new VPN connection are not declared in that VPN domain, especially if the VPN domain is automatically derived ("Based on Topology information"). If you're using clusters, then edit the topology and define the interfaces as cluster interfaces. Use the IP addresses provided in this file.




! #4: Internet Key Exchange (IKE) Configuration and IPSEC Config
!
! A policy is established for the supported ISAKMP encryption,
! authentication, Diffie-Hellman, lifetime, and key parameters.
! Please note, these sample configurations are for the minimum requirement of AES128, SHA1, and DH Group 2.
! You will need to modify these sample configuration files to take advantage of AES256, SHA256, or other DH groups like 2, 14-18, 22, 23, and 24.
! NOTE: If you customized tunnel options when creating or modifying your VPN connection, you may need to modify these sample configurations to match the custom settings for your tunnels.

! IPSec Configuration
! The IPSec transform set defines the encryption, authentication, and IPSec mode parameters.

! The address of the external interface for your customer gateway must be a static address.
! Your customer gateway may reside behind a device performing network address translation (NAT).
! To ensure that NAT traversal (NAT-T) can function, you must adjust your firewall rules to unblock UDP port 4500.
| If not behind NAT, and you are not using an Accelerated VPN, we recommend disabling NAT-T. If you are using an Accelerated VPN, make sure that NAT-T is enabled.

! Configuration to be done via Smart Dashboard.
! Please make sure you have enabled the VPN Blade on the Firewall.

1. On "IPsec VPN", choose "Communities".
2. Choose to open VPN vpn-123456789abc12345
3. For "Satellite Gateways", add the interoperable devices that you created before.
4. Expand "Advanced Settings". For "Shared Secret":  <pre-shared-key>
5. Other setting will remain same.
6. Click OK to close the VPN Window.



! --------------------------------------------------------------------------------
#5: Firewall Configuration
!
! Create a firewall policy permitting traffic from your local subnet to the VPC subnet and vice versa
! This example policy permits all traffic from the local subnet to the VPC.You must create firewall rules when you specify a community inside a VPN column.
 1. From the SmartDashboard, choose "Global Properties", "VPN", "Advanced".
 2. Choose "Enable VPN Directional Match in VPN Column".
 3. From the SmartDashboard, choose "Firewall" and create firewall rules/policy as follows:
  a. Allow the VPC subnet to communicate with the local subnet using the required protocol.
  b. Allow the local subnet to communicate with the VPC subnet using the required protocol.
 4. In the VPN cell for the rule, open the context (right-click) menu and choose "Directional Match Condition".
 5. Choose "Add" to add directional match rules as follows:
   a. internal_clear --> vpn-123456789abc12345
   b. vpn-123456789abc12345 --> vpn-123456789abc12345
   c. vpn-123456789abc12345 --> internal_clear
 6. Install the policy on the gateway.
   Note: If you enable directional match rules globally, existing VPN rules are not affected and continue to function.
    Initiate some traffic from local network to the VPC to bring up the tunnel.

! --------------------------------------------------------------------------------



! #6:Dead Peer Detection (DPD)

Your Check Point gateway can use Dead Peer Detection (DPD) to identify when an IKE association is down.

To configure DPD for a permanent tunnel, the permanent tunnel must be configured in the AWS VPN community (refer to Step 4 in Step 4: Create a VPN Community and Configure IKE and IPsec).

By default, the tunnel_keepalive_method property for a VPN gateway is set to tunnel_test. You must change the value to dpd. Each VPN gateway in the VPN community that requires DPD monitoring must be configured with the tunnel_keepalive_method property, including any 3rd party VPN gateway (you cannot configure different monitoring mechanisms for the same gateway).

You can update the tunnel_keepalive_method property using the GuiDBedit tool.

To modify the tunnel_keepalive_method property

 1. Open the Check Point SmartDashboard, and choose Security Management Server, Domain Management Server.
 2. Choose File, Database Revision Control... and create a revision snapshot.
 3. Close all SmartConsole windows, such as the SmartDashboard, SmartView Tracker, SmartView Monitor, and so on.
 4. Start the GuiBDedit tool. For more information, see the Check Point Database Tool article on the Check Point Support Center.
 5. Choose Security Management Server, Domain Management Server.
 6. In the upper left pane, choose Table, Network Objects, network_objects.
 7. In the upper right pane, select the relevant Security Gateway, Cluster object.
 8. Press CTRL+F, or use the Search menu to search for the following: tunnel_keepalive_method.
 9. In the lower pane, open the context menu for tunnel_keepalive_method, and select Edit.... Choose dpd and choose OK.
 10. Repeat steps 7 - 9 for each gateway that's part of the AWS VPN Community.
 11. Save the changes by choosing File, Save All.
 12. Close the GuiDBedit tool.
 13. Open the Check Point SmartDashboard, and choose Security Management Server, Domain Management Server.
 14. Install the policy on the relevant Security Gateway, Cluster object.



Please refer to sk97746 for more information


! #7: Optional Parameters (Recommended) :
To enable MSS clamping go to your Checkpoint Management Server:

 1. Go to C:\Program Files (x86)\CheckPoint\SmartConsole\R77.10\PROGRAM.
 2. Open the Checkpoint Database Tool by running GuiDBedit.exe.
 3. Choose "Table", "Global Properties", "Properties".
 4. For "fw_clamp_tcp_mss", enter true.

Enabling TCP MSS Clamping (R77.20 and above): refer to sk101219 for more information.

Initiate some traffic from local network to the VPC to bring up the tunnel.
Additional Notes
================================================================================
- Amazon Virtual Private Cloud Network Administrator Guide: http://docs.aws.amazon.com/AmazonVPC/latest/NetworkAdminGuide/Welcome.html
- For more information on static VPN, see the following article on the Check Point Support Center: https://supportcenter.checkpoint.com sk100726
- For more information on BGP VPN, see the following article on the Check Point Support Center: https://supportcenter.checkpoint.com sk108958




! Additional Notes and Questions
!  - Amazon Virtual Private Cloud Getting Started Guide:
!       http://docs.amazonwebservices.com/AmazonVPC/latest/GettingStartedGuide
!  - Amazon Virtual Private Cloud Network Administrator Guide:
!       http://docs.amazonwebservices.com/AmazonVPC/latest/NetworkAdminGuide
